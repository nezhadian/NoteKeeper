<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:DORVPN.ExtendedControls.Controls;assembly=DORVPN.ExtendedControls"
    xmlns:converters="clr-namespace:DORVPN.ExtendedControls.Converters;assembly=DORVPN.ExtendedControls">

    <!--  Listboxes  -->
    <Style x:Key="ListboxesBase" TargetType="ListBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />

    </Style>

    <!--  Listbox items  -->
    <Style x:Key="noteListItemsContainer" TargetType="ListBoxItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="{StaticResource gray100}" />
        <Setter Property="Padding" Value="8" />
        <Setter Property="Margin" Value="0,0,0,12" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        x:Name="back"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="back" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={x:Static converters:SolidBrushColorMultiplierConverter.Instance}, ConverterParameter=0.97}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="back" Property="Background" Value="{StaticResource Primary100}" />
                            <Setter TargetName="back" Property="BorderBrush" Value="{StaticResource Primary500}" />
                            <Setter Property="BorderThickness" Value="1" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Textboxes  -->
    <Style x:Key="MainTextBoxStyle" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{StaticResource VazirmatnFont}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{StaticResource gray700}" />
        <Setter Property="SelectionBrush" Value="{StaticResource Primary500}" />
    </Style>
    <Style
        x:Key="EditorTextBoxStyle"
        BasedOn="{StaticResource MainTextBoxStyle}"
        TargetType="TextBox">
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="AcceptsTab" Value="True" />
    </Style>
    <Style
        x:Key="TextBoxStyle"
        BasedOn="{StaticResource MainTextBoxStyle}"
        TargetType="TextBox">

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource Background}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="IBeam" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Grid.Column="1" Margin="4,0,0,0">

                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FlowDirection="LeftToRight" />

                            <TextBlock
                                x:Name="HintTextBlock"
                                Margin="3,0,0,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding BorderBrush}"
                                IsHitTestVisible="False"
                                Text="{Binding (controls:TextBoxExtensions.HintText), RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="HintTextBlock" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="HintTextBlock" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <!--  Buttons  -->

    <Style x:Key="CircularOnlyIconButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Secondary500}" />
        <Setter Property="Foreground" Value="{StaticResource Background}" />
        <Setter Property="Height" Value="56" />
        <Setter Property="Width" Value="56" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Ellipse x:Name="back" Fill="{TemplateBinding Background}" />

                        <Grid Margin="{TemplateBinding Padding}">
                            <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="back" Property="Fill" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={x:Static converters:SolidBrushColorMultiplierConverter.Instance}, ConverterParameter=1.1}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="back" Property="Fill" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={x:Static converters:SolidBrushColorMultiplierConverter.Instance}, ConverterParameter=0.94}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Rectangle
                        Width="24"
                        Height="24"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Fill="{StaticResource Background}"
                        OpacityMask="{Binding Converter={x:Static converters:DrawingImageToOpacityMaskConverter.Instance}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Primary500}" />
        <Setter Property="Foreground" Value="{DynamicResource Background}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="48" />

        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontFamily" Value="{StaticResource VazirmatnFont}" />

        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="24,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        x:Name="back"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="back" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={x:Static converters:SolidBrushColorMultiplierConverter.Instance}, ConverterParameter=1.1}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="back" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={x:Static converters:SolidBrushColorMultiplierConverter.Instance}, ConverterParameter=0.94}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="LighterButtonStyle"
        BasedOn="{StaticResource {x:Type Button}}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Primary100}" />
        <Setter Property="Foreground" Value="{DynamicResource Primary900}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border
                        x:Name="back"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="8">

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="back" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={x:Static converters:SolidBrushColorMultiplierConverter.Instance}, ConverterParameter=0.97}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="back" Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={x:Static converters:SolidBrushColorMultiplierConverter.Instance}, ConverterParameter=0.90}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>